# 内置tomcat配置
server:
  port: 8080

# # 配置静态资源
#  mvc:
#    static-path-pattern: classpath:/static/**

spring:
  # 缓存
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # Redis服务器地址
    host: localhost
  # 数据源
  datasource:
    # 使用druid连接池组件
    type: com.alibaba.druid.pool.DruidDataSource
    #配置基本属性
    url: jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true&useSSL=false
    username: root
    password: admin
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    driverClassName: com.mysql.jdbc.Driver
    #配置初始化大小/最小/最大
    initialSize: 1
    minIdle:  1
    maxActive:  20
    #获取连接等待超时时间
    maxWait: 60000
    #间隔多久进行一次检测，检测需要关闭的空闲连接
    timeBetweenEvictionRunsMillis: 60000
    #一个连接在池中最小生存的时间
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 1
    # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
    testOnBorrow: true
    # 指明是否在归还到池中前进行检验,注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
    testOnReturn: false
    # 打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize:  20
  # thymeleaf模板引擎配置
  thymeleaf:
    cache: false # 开发时关闭缓存，不然没法看到实时页面
    mode: LEGACYHTML5 # 严格的html5格式
    encoding: UTF-8
    servlet:
      content-type: text/html
    # templates文件夹该路径相当于WEB-INFO，无法通过地址栏直接访问，需要映射路径
    prefix: classpath:/templates/
    suffix: .html
#rabbitmq:
#    host: localhost
#    port: 5672
#    username: admin
#    password: 123456

# Mybatis配置
#mybatis:
#  # mapper映射文件的位置
#  mapper-locations: classpath:mapper/*.xml
#  # pojo实体类所在的包名。
#  #作用：给pojo取一个别名，如标签<select id="getUsers" resultType="com.majing.learning.mybatis.entity.User">，resultType属性可以直接使用"user"，而不需要使用全类名
#  type-aliases-package: com.yunze.demo.pojo
#  configuration:
#    # 属性为true来开启驼峰功能。
#    map-underscore-to-camel-case: true

# 分页配置
#pagehelper:
#  helper-dialect: mysql
#  reasonable: true
#  support-methods-arguments: true
#  params: count=countSql

# 启用springboot的debugger日志
logging:
  level:
    # 配置报错信息
    org.springframework.web: debug
    # 配置打印sql语句
    com.yunze.demo.mapper: debug